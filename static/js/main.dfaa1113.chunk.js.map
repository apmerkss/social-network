{"version":3,"sources":["components/Footer/Footer.module.css","redux/sidebar-reducer.js","redux/dialogs-reducer.js","api/api.js","redux/profile-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","assets/images/man.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Footer/Footer.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/Navbar/Friend/Friend.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Users/Users.jsx","assets/images/loader.svg","components/common/preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Login/Login.module.css","components/Header/Header.module.css","components/Navbar/Friend/Friend.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","initialState","links","id","link","text","friends","name","sideBarReducer","state","ADD_MESSAGE","dialogs","messages","message","date","newMessageText","dialogsReducer","action","type","newMessage","instance","axios","create","withCredentials","baseURL","headers","profileAPI","userId","get","then","response","data","newStatus","put","status","usersAPI","currentPage","pageSize","isFollow","delete","post","authAPI","email","password","rememberMe","securityAPI","ADD_POST","SET_PROFILE_INFO","SET_STATUS","posts","likesCount","profileInfo","newPostText","currentUserId","setStatus","getUserProfile","dispatch","getUserStatus","profileReducer","newPost","TOGGLE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","FETCHING_USERS","FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","pageNumb","setTotalUsersCount","totalCount","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","filter","SET_USER_DATA","SET_CAPTCHA","isAuth","login","avatar","captchaUrl","authorizedUserId","setUserAuthData","payload","getMyProfile","resultCode","logout","authReducer","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","app","sidebar","sidebarReducer","dialogsPage","profilePage","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunk","window","Header","props","className","s","header","container","to","logo","src","alt","onClick","userPhoto","width","height","HeaderContainer","this","React","Component","connect","photos","small","Footer","footer","Message","messageItem","activeClassName","activeLink","datetime","DialogItem","path","dialog","activeDialog","friend","dateTime","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","Field","input","component","button","Dialogs","dialogsElement","messagesElement","m","dialogItems","onSubmitMessage","mapStateToProps","WithAuthRedirect","RedirectComponent","match","params","userID","compose","withRouter","withAuthRedirect","formData","Friend","Navbar","item","nav","menu","NavbarContainer","Users","pagesCount","Math","ceil","pages","i","push","p","onPageChanged","selectedPage","user","ava","disabled","find","toggleFollowUser","info","location","Preloader","preloader","UsersContainer","pageNumber","getUsers","items","toggleFollowUserAC","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","target","value","prevProps","prevState","snapshot","onBlur","autoFocus","onChange","onDoubleClick","ProfileInfo","banner","wrapper","fullName","aboutMe","Post","AddPostFormRedux","field","MyPosts","postElement","addPost","MyPostsContainer","Profile","ProfileContainer","LoginReduxForm","placeholder","sendLoginRequest","url","stopSubmit","captcha","App","initializedApp","DialogsContainer","render","promise","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfaa1113.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","let initialState = {\n    links: [\n        {\n            id: 1, link: '/profile', text: 'Profile'\n        },\n        {\n            id: 2, link: '/dialogs', text: 'Messages'\n        },\n        {\n            id: 3, link: '/news', text: 'News'\n        },\n        {\n            id: 6, link: '/users', text: 'Users'\n        },\n        {\n            id: 4, link: '/music', text: 'Music'\n        },\n        {\n            id: 5, link: '/settings', text: 'Settings'\n        }\n    ],\n    friends: [\n        {id: 1, name: 'Tom'},\n        {id: 2, name: 'Den'},\n        {id: 3, name: 'Maks'}\n    ]\n}\n\nconst sideBarReducer = (state = initialState, action) => {\n    return state;\n}\n\nexport default sideBarReducer;\n","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Tom'},\n        {id: 2, name: 'Den'},\n        {id: 3, name: 'Maks'},\n        {id: 4, name: 'Marta'}\n    ],\n\n    messages: [\n        {id: 1, message: 'Hiiiii', name: 'Tom', date: '2004-07-24T18:18'},\n        {id: 2, message: 'Yo', name: 'Ben', date: '2004-07-24T18:18'},\n        {id: 3, message: 'what\\'s up?', name: 'Shon', date: '2004-07-24T18:18'},\n        {id: 4, message: 'How are you?', name: 'Kent', date: '2004-07-24T18:18'}\n    ],\n    newMessageText: 'Hi',\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            let newMessageText = action.newMessageText;\n            let newMessage = {\n                id: 5,\n                message: newMessageText,\n                name: 'Your name',\n                date: ''\n            };\n\n            return {\n                ...state,\n                messages: [...state.messages, newMessage],\n                newMessageText: ''\n            };\n        default:\n            return state;\n    }\n};\n\nexport const addMessageActionCreator = (newMessageText) => ({type: ADD_MESSAGE, newMessageText});\n\nexport default dialogsReducer;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '6f7f3ecd-ed5e-4ed6-a0ce-111fd29fbd86'\n    }\n})\nexport const profileAPI = {\n    getUserStatus: (userId) => {\n        return instance.get('profile/status/' + userId).then(response => {\n            return response.data\n        });\n    },\n\n    updateStatus: (newStatus) => {\n        return instance.put('profile/status/', {status: newStatus}).then(response => {\n            return response.data\n        });\n    },\n}\n\n\nexport const usersAPI = {\n    getUsers: (currentPage = 1, pageSize = 10) => {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n            return response.data\n        });\n    },\n\n    toggleFollowUser: (userId, isFollow) => {\n        if (isFollow) {\n            return instance.delete(`follow/${userId}`).then(response => {\n                return response.data\n            });\n        }\n\n        return instance.post(`follow/${userId}`, null).then(response => {\n            return response.data\n        });\n    },\n}\n\nexport const authAPI = {\n    getUserProfile: (userId) => {\n        return instance.get('profile/' + userId).then(response => {\n            return response.data\n        });\n    },\n\n    me: () => {\n        return instance.get('/auth/me');\n    },\n\n    login: (email, password, rememberMe = false) => {\n        return instance.post('auth/login', {email, password, rememberMe});\n    },\n\n    logout: () => {\n        return instance.delete('auth/login');\n    },\n\n}\n\nexport const securityAPI = {\n    captcha: () => {\n        return instance.get('/security/get-captcha-url');\n    }\n}\n","import {authAPI, profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_PROFILE_INFO = 'SET_PROFILE_INFO';\nconst SET_STATUS = 'SET_STATUS';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Taki spavu', likesCount: 12},\n        {id: 2, message: 'It\\'s time to go futher', likesCount: 23},\n        {id: 3, message: 'I like apples', likesCount: 4}\n    ],\n    profileInfo: null,\n    newPostText: '',\n    status: '',\n    id: null,\n    currentUserId: null\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPost: ''\n            };\n        }\n\n        case SET_PROFILE_INFO: {\n            return {\n                ...state,\n                profileInfo: action.profileInfo\n            }\n        }\n\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\n\nexport const setProfileInfo = (profileInfo) => ({type: SET_PROFILE_INFO, profileInfo});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\n\nexport const getUserProfile = (userId) => {\n    return (dispatch) => {\n        authAPI.getUserProfile(userId).then(response => {\n            dispatch(setProfileInfo(response));\n            dispatch(getUserStatus(userId));\n        });\n    }\n}\n\nexport const getUserStatus = (userId) => {\n    return (dispatch) => {\n        profileAPI.getUserStatus(userId).then(response => {\n            dispatch(setStatus(response));\n        });\n    }\n}\n\nexport const updateStatus = (status) => {\n\n    return (dispatch) => {\n        profileAPI.updateStatus(status).then(response => {\n            if (response.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n        });\n    }\n}\n\nexport default profileReducer;\n","import {usersAPI} from \"../api/api\";\n\nconst TOGGLE_FOLLOW = 'TOGGLE_FOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst FETCHING_USERS = 'FETCHING_USERS';\nconst FOLLOWING_PROGRESS = 'FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_FOLLOW: {\n            return {\n                ...state,\n                // users: [...state.users],\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: !u.followed}\n                    }\n                    return u;\n                })\n            };\n        }\n\n        case SET_USERS: {\n            return { ...state, users: [...action.users ]}\n        }\n\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.pageNumb }\n        }\n\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.totalCount }\n        }\n\n        case FETCHING_USERS: {\n            return {...state, isFetching: action.isFetching}\n        }\n\n        case FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                ? [...state.followingInProgress, action.userId]\n                : [...state.followingInProgress.filter(id => id !== action.userId)]\n            }\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const setCurrentPage = (pageNumb) => ({type: SET_CURRENT_PAGE, pageNumb});\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\nexport const toggleIsFetching = (isFetching) => ({type: FETCHING_USERS, isFetching});\nexport const toggleFollowUserAC = (userId) => ({type: TOGGLE_FOLLOW, userId});\nexport const toggleFollowingProgress = (userId, isFetching) => ({type: FOLLOWING_PROGRESS, userId, isFetching});\nexport const setUsers = (users) => ({type: SET_USERS, users});\n\nexport const getUsers = (currentPage, pageSize) => {\n    return (dispatch) => {\n        dispatch(setCurrentPage(currentPage));\n        dispatch(toggleIsFetching(true));\n\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\n\n            dispatch(setUsers(data.items));\n            dispatch(toggleIsFetching(false));\n            dispatch(setTotalUsersCount(data.totalCount));\n        });\n    }\n}\n\nexport const toggleFollowUser = (userId, isFollow) => {\n    return (dispatch) => {\n        dispatch(toggleFollowingProgress(userId, true));\n\n        usersAPI.toggleFollowUser(userId, isFollow).then(data => {\n            if (data.resultCode === 0) {\n                dispatch(toggleFollowUserAC(userId));\n                dispatch(toggleFollowingProgress(userId, false));\n            }\n        });\n    }\n}\n\nexport default usersReducer;\n","import {authAPI, securityAPI} from \"../api/api\";\nimport {getUserProfile} from \"./profile-reducer\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_CAPTCHA = 'SET_CAPTCHA';\n\nlet initialState = {\n    isAuth: false,\n    userId: null,\n    login: null,\n    email: null,\n    avatar: null,\n    id: null,\n    captchaUrl: null,\n    authorizedUserId: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                ...action.payload ,  //payload = userData\n            };\n        }\n        case SET_CAPTCHA: {\n            return {\n                ...state,\n                captchaUrl: action.captchaUrl\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const setUserAuthData = (userId, email, login, isAuth = true, captchaUrl = null) => (\n    {\n        type: SET_USER_DATA,\n        payload: {\n            userId, email, login, isAuth, captchaUrl, authorizedUserId: userId\n        }\n    }\n);\n\nexport const setCaptcha = (captchaUrl) => (\n    {\n        type: SET_CAPTCHA,\n        captchaUrl\n    }\n);\n\n\nexport const getMyProfile = () => {\n    return (dispatch) => {\n        authAPI.me().then(response => {\n            let {id, email, login} = response.data.data;\n            if (response.data.resultCode === 0) {\n                dispatch(getUserProfile(id));\n                dispatch(setUserAuthData(id, email, login));\n            }\n        });\n    }\n}\n\nexport const sendLoginRequest = (email, password, rememberMe) => {\n    return (dispatch) => {\n        authAPI.login(email, password, rememberMe).then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(getMyProfile());\n            } else if (response.data.resultCode === 10) {\n                securityAPI.captcha().then(response => {\n                    dispatch(setCaptcha(response.data.url));\n                })\n            } else {\n                let action = stopSubmit('login', {email: \"Email is wrong\"});\n            }\n        });\n    }\n}\n\nexport const logout = () => {\n    return (dispatch) => {\n        authAPI.logout().then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setUserAuthData(null, null, null, false));\n            }\n        });\n    }\n}\n\nexport default authReducer;\n","import {authAPI} from \"../api/api\";\nimport {getMyProfile, setUserAuthData} from \"./auth-reducer\";\n\nconst SET_INITIALIZED = 'SET_INITIALIZED';\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case SET_INITIALIZED: {\n            return {\n                ...state,\n                initialized: true\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({type: SET_INITIALIZED});\n\nexport const initializedApp = () => (dispatch) => {\n    let promise = dispatch(getMyProfile());\n\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    })\n}\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport {reducer as formReducer} from \"redux-form\";\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    app: appReducer,\n    sidebar: sidebarReducer,\n    dialogsPage: dialogsReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer\n});\n\nlet store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;\n\nwindow.store = store;\n","export default __webpack_public_path__ + \"static/media/man.77349eb5.png\";","import s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport userPhoto from \"../../assets/images/man.png\";\n\nconst Header = (props) => {\n\n    return (\n        <header className={s.header}>\n            <div className={s.container}>\n                <NavLink to='/profile'>\n                    <img className={s.logo} src=\"https://img.icons8.com/ios-filled/100/ffffff/marriott-hotels.png\" alt=\"\"/>\n                </NavLink>\n            </div>\n            <div>\n                { props.isAuth ?\n                    <>\n                        <NavLink to='/profile'>Account { props.login } </NavLink><button onClick={props.logout}>Logout</button>\n                    <img  src={props.avatar ? props.avatar : userPhoto } alt=\"avatar\" width='40' height=\"40\"/></> :\n                    <NavLink to='/login'>Login</NavLink>\n                }\n            </div>\n        </header>\n    )\n}\n\nexport default Header;\n"," import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport Header from \"./Header\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header  {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n        avatar: state.profilePage.profileInfo ? state.profilePage.profileInfo.photos.small : null\n    }\n}\n\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import s from './Footer.module.css';\n\nconst Footer = () => {\n    return (\n            <footer className={s.footer}>\n                © 2021 Company Name. All Rights Reserved.\n            </footer>\n        )\n}\n\nexport default Footer;\n","import s from './Message.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Message = (props) => {\n    return (\n        <li className={s.messageItem}>\n            <img className={s.avatar} src=\"https://source.unsplash.com/IMYvZjlX3jE/50x50\" alt=\"\"/>\n            <div>\n                <NavLink to={props.messages.id}  activeClassName={s.activeLink} className={s.link}>\n                    <span className=\"friendName\">{props.messages.name}</span>\n                </NavLink>\n                <span>\n                    <time datetime={props.messages.date}>\n                        {props.messages.date}\n                    </time>\n                </span>\n                <div className={s.message}>{props.messages.message}</div>\n            </div>\n        </li>\n    );\n}\n\nexport default Message;\n","import s from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = `/dialogs/${props.id}`;\n\n    return (\n        <li className={s.dialog}>\n            <img className={s.avatar} src=\"https://source.unsplash.com/IMYvZjlX3jE/50x50\" alt=\"\"/>\n            <div>\n                <NavLink to={path} activeClassName={s.activeDialog} className={s.friend}>{props.name}</NavLink> <br/>\n              {/*  <span>Hi James! It’s Diana, I just wanted to let you know that we have to reschedule...</span> <br/>*/}\n                <span className={s.date}>\n                    <time dateTime=\"2004-07-24T18:18\">4 hours ago</time>\n                </span>\n            </div>\n        </li>\n    );\n}\n\nexport default DialogItem;\n","import s from './Dialogs.module.css'\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nconst AddMessageForm = (props) => {\n    return (\n        <form className={s.form} onSubmit={props.handleSubmit}>\n            <Field className={s.input} name={\"message\"} component=\"textarea\"/>\n            <button className={s.button}>Submit</button>\n        </form>\n    )\n};\n\nconst AddMessageFormRedux = reduxForm({form: 'addMessage'})(AddMessageForm);\n\nconst Dialogs = (props) => {\n\n    let dialogsElement = props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\n    let messagesElement = props.dialogsPage.messages.map(m => <Message messages={m}/>);\n\n    return (\n        <div>\n            <h1>Dialogs</h1>\n            <div className={s.dialogs}>\n                <ul className={s.dialogItems}>\n                    {dialogsElement}\n                </ul>\n                <div>\n                    <ul className={s.messages}>\n                        {messagesElement}\n                    </ul>\n                    <AddMessageFormRedux onSubmit={props.onSubmitMessage}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n","import {connect} from \"react-redux\";\nimport React from \"react\";\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst WithAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth && !this.props.match.params.userID) return <Redirect to={\"/login\"}/>;\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = compose(withRouter, connect(mapStateToProps))(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}\n\n\nexport default WithAuthRedirect;\n","import Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onSubmitMessage: (formData) => {\n\n            let action = addMessageActionCreator(formData.message);\n            dispatch(action);\n        }\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs);\n\n","import s from \"./Friend.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Friend = (props) => {\n\n    let friends = props.friends.map(friend => <li key={friend.id}>\n        <NavLink to={friend.id}  activeClassName={s.activeLink} className={s.link}>\n            <img className={s.avatar} src=\"https://source.unsplash.com/IMYvZjlX3jE/50x50\" alt=\"\"/>\n            <span className=\"friendName\">{friend.name}</span>\n        </NavLink>\n    </li>);\n\n    return (\n        <div>\n            <h3>\n                TOP Friends\n                <ul>\n                    {friends}\n                </ul>\n            </h3>\n        </div>\n    )\n}\n\nexport default Friend;\n","import s from \"./Navbar.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport Friend from \"./Friend/Friend\";\n\nconst Navbar = (props) => {\n    let links = props.sidebar.links.map(item => <li key={item.id}><NavLink to={item.link} activeClassName={s.activeLink} className={s.link}>{item.text}</NavLink></li>);\n\n    return (\n        <aside className={s.nav}>\n            <ul className={s.menu}>\n                {links}\n            </ul>\n            <Friend friends={props.sidebar.friends}/>\n        </aside>\n    )\n}\n\nexport default Navbar;\n","import {connect} from \"react-redux\";\nimport Navbar from \"./Navbar\";\n\nlet mapStateToProps = (state) => {\n    return {\n        sidebar: state.sidebar\n    }\n}\n\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\n\nexport default NavbarContainer;\n","import s from './Users.module.css'\nimport userPhoto from '../../assets/images/man.png';\nimport {NavLink} from \"react-router-dom\";\n\nconst Users = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = [];\n\n     for (let i = pagesCount - 5; i <= pagesCount; i++) {\n   // for (let i = 1; i <= 5; i++) {\n        pages.push(i);\n    }\n\n    return <div>\n        <h1>Users</h1>\n        <div>\n            {\n                pages.map(p => {\n                    return <button onClick={() => {\n                        props.onPageChanged(p);\n                    }}\n                                   className={props.currentPage === p && s.selectedPage}>{p}\n                    </button>\n                })\n            }\n        </div>\n        {\n            props.users.map(u =>\n\n                <div key={u.id} className={s.user}>\n                    <div>\n                        <NavLink to={`profile/${u.id}`}>\n                            <img className={s.ava} src={u.photos.small ? u.photos.small : userPhoto} alt=\"\"/>\n                        </NavLink>\n                        <br/>\n                        {\n                            <button\n                                disabled={props.followingInProgress.find(item => item === u.id) ? 'disabled' : null }\n                                onClick={() => {\n                                    props.toggleFollowUser(u.id, u.followed)\n                                }}>\n                                {u.followed ? 'Unfollow' : 'Follow'} {u.id}\n                            </button>\n                        }\n                    </div>\n                    <div className={s.info}>\n                        <div>\n                            <span>{u.name}</span>\n                            <p>{u.status}</p>\n                        </div>\n                        <div className={s.location}>\n                            <p>u.location.country</p>\n                            <p>u.location.city</p>\n                        </div>\n                    </div>\n                </div>)\n        }\n    </div>\n}\n\nexport default Users;\n","export default __webpack_public_path__ + \"static/media/loader.236e7f5c.svg\";","import preloader from '../../../assets/images/loader.svg';\n\nconst Preloader = () => {\n    return <img src={preloader} alt=\"preloader\"/>\n}\n\nexport default Preloader;\n","import {connect} from \"react-redux\";\nimport {\n    getUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    toggleFollowUser\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount(props) {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n        return <>\n                    {this.props.isFetching ? <Preloader/> : null }\n                    <Users\n                        totalUsersCount={this.props.totalUsersCount}\n                        onPageChanged={this.onPageChanged}\n                        toggleFollowUser={this.props.toggleFollowUser}\n                        pageSize={this.props.pageSize}\n                        currentPage={this.props.currentPage}\n                        users={this.props.users}\n                        followingInProgress={this.props.followingInProgress}\n                    />\n                </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        currentPage: state.usersPage.currentPage,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {setCurrentPage, setTotalUsersCount, getUsers, toggleFollowUser})\n)(UsersContainer);\n","import s from './ProfileInfo.module.css'\nimport Preloader from \"../../common/preloader/Preloader\";\nimport userPhoto from \"../../../assets/images/man.png\";\nimport React from \"react\";\n\nclass ProfileStatus extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n\n        this.setState({\n                editMode: true\n            }\n        )\n    }\n\n    deactivateEditMode = () => {\n        this.setState({\n                editMode: false\n            }\n        )\n\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n                status: e.target.value\n            }\n        )\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n           if(this.props.status !== prevProps.status) {\n               this.setState({\n                        status: this.props.status\n                   }\n               )\n           }\n    }\n\n\n    render() {\n        return (\n            <div className={s.status}>\n                {this.state.editMode \n                    ? <input onBlur={this.deactivateEditMode} autoFocus={true} onChange={this.onStatusChange} type=\"text\" value={this.state.status}/>\n                    : <span onDoubleClick={(e) => this.activateEditMode(e)}>{this.props.status || '--status--'}</span>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;\n","import s from './ProfileInfo.module.css'\nimport Preloader from \"../../common/preloader/Preloader\";\nimport userPhoto from \"../../../assets/images/man.png\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = (props) => {\n    if (!props.profileInfo) {\n        return  <Preloader/>\n    }\n\n    return (\n            <div>\n                <img width=\"967\" height=\"157\" className={s.banner} src=\"https://source.unsplash.com/DLwUVlzrP0Q/1600x250\" alt=\"\"/>\n                <div className={s.wrapper}>\n                    <img className={s.avatar} src={props.profileInfo.photos.small ? props.profileInfo.photos.small : userPhoto } alt=\"avatar\" width='75' height=\"75\"/>\n                    <div className={s.info}>\n\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\n                        <hr/>\n                        <h1>{props.profileInfo.fullName}</h1>\n                        {props.profileInfo.aboutMe && props.profileInfo.aboutMe }\n\n                      \n\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default ProfileInfo;\n","import s from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n        <li className={s.post}>\n            <img className={s.avatar} src=\"https://source.unsplash.com/IMYvZjlX3jE/150x150\" alt=\"\"/>\n            <div>\n                Post #{props.id} <br/>\n                <p>\n                    {props.message}\n                </p>\n                <div>\n                    <button>Like</button>\n                    <span> ({props.likesCount})</span>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Post;\n","import s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nconst AddPostForm = (props) => {\n    return (\n        <form className={s.form} onSubmit={props.handleSubmit}>\n            <Field component={'input'} type={'textarea'} name={'newPostText'} className={s.field} value={props.newPostText}></Field>\n            <button className={s.button}>Add Post</button>\n        </form>\n    )\n}\n\nconst   AddPostFormRedux = reduxForm({form: 'addMessage'})(AddPostForm);\n\n\nconst MyPosts = (props) => {\n    let postElement =\n        props.posts.map(p => <Post message={p.message} id={p.id} likesCount={p.likesCount}/>);\n\n    let addPost = (formData) => {\n        props.addPost(formData);\n    };\n\n    return (\n        <div>\n            <h2>\n                My Posts\n            </h2>\n            <AddPostFormRedux onSubmit={addPost}/>\n            <ul className={s.posts}>\n                {postElement}\n            </ul>\n        </div>\n    )\n};\n\nexport default MyPosts;\n","import MyPosts from \"./MyPosts\";\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\n\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (formData) => {\n           dispatch(addPostActionCreator(formData.newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n    return (\n            <div>\n                <ProfileInfo {...props}/>\n                <MyPostsContainer />\n            </div>\n    )\n}\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getUserProfile, getUserStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\"\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount(props) {\n        let userId = this.props.match.params.userID || this.props.authorizedUserId;\n\n        if (userId) {\n            this.props.getUserProfile(userId);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile  {...this.props} userId={this.userId}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profileInfo: state.profilePage.profileInfo,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.authorizedUserId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    withRouter,\n    withAuthRedirect,\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus})\n)(ProfileContainer);\n\n","import s from './Login.module.css'\nimport {Field, reduxForm} from \"redux-form\";\nimport {logout, sendLoginRequest} from \"../../redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nconst Login = (props) => {\n\n    const logIn = (formData) => {\n        props.sendLoginRequest(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} /> ;\n    }\n\n    return (\n        <div>\n            <h1>Hello</h1>\n\n            <LoginReduxForm onSubmit={logIn} captchaUrl={props.captchaUrl} />\n        </div>\n    )\n}\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field className={s.input} name={\"email\"} component=\"input\" placeholder=\"email\"/>\n            <Field className={s.input} name={\"password\"}  type=\"password\" component=\"input\" placeholder=\"Password\"/>\n            <label>\n                <Field type={\"checkbox\"}  name={\"rememberMe\"} component=\"input\"/>\n                Remember me\n            </label>\n\n            { props.captchaUrl ?\n                <>\n                    Please, enter text from the picture <br/><br/>\n                    <img src={props.captchaUrl} alt=\"Captcha picture\"/><br/>\n                    <Field className={s.input} name={\"captcha\"} component=\"input\" placeholder={'Captcha'}/>\n                </>\n                : '' }\n\n            <button className={s.button}>Login</button>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        captchaUrl: state.auth.captchaUrl\n    }\n};\n\nexport default connect(mapStateToProps, {sendLoginRequest, logout})(Login);\n\n\n//to do:\n\n// -  send auth data to api\n// -  redirect to profile page if logged in\n","import './App.scss';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Footer from \"./components/Footer/Footer\";\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport Login from \"./components/Login/Login\";\nimport {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport {initializedApp} from \"./redux/app-reducer\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializedApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <main className='content'>\n                    <NavbarContainer/>\n                    <article>\n                        <Route path='/dialogs'>\n                            <DialogsContainer/>\n                        </Route>\n                        <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </article>\n                </main>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nexport default connect(mapStateToProps, {initializedApp})(App);\n","import store from \"./redux/redux-store\";\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>,\n     </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__3boPV\",\"banner\":\"ProfileInfo_banner__1uWel\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"info\":\"ProfileInfo_info__3dsdE\",\"status\":\"ProfileInfo_status__2G3BZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"form\":\"Dialogs_form__1EQXf\",\"field\":\"Dialogs_field__1dE4S\",\"button\":\"Dialogs_button__UnW0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"Message_messageItem__1CLbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"activeDialog\":\"DialogItem_activeDialog__3ZAjq\",\"friend\":\"DialogItem_friend__3Ei13\",\"avatar\":\"DialogItem_avatar__12OzI\",\"date\":\"DialogItem_date__NDFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__1dQYj\",\"info\":\"Users_info__W1JxX\",\"location\":\"Users_location__1IQvC\",\"ava\":\"Users_ava__dN1VK\",\"selectedPage\":\"Users_selectedPage__J63sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"link\":\"Navbar_link__TNvz9\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"menu\":\"Navbar_menu__NKpxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"form\":\"MyPosts_form__2b1nv\",\"field\":\"MyPosts_field__1WcIv\",\"button\":\"MyPosts_button__2WbpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Login_input__1zhXD\",\"button\":\"Login_button__3J267\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"container\":\"Header_container__1VC87\",\"logo\":\"Header_logo__3_SJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Friend_nav__3U3Zd\",\"link\":\"Friend_link__1aprK\",\"activeLink\":\"Friend_activeLink__2VzEv\",\"menu\":\"Friend_menu__2uhCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Post_avatar__1wBwP\",\"post\":\"Post_post__A0EJd\"};"],"sourceRoot":""}